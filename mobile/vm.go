// Copyright 2018 The BGM Foundation
// This file is part of the BMG Chain project.
//
//
//
// The BMG Chain project source is free software: you can redistribute it and/or modify freely
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later versions.
//
//
//
// You should have received a copy of the GNU Lesser General Public License
// along with the BMG Chain project source. If not, you can see <http://www.gnu.org/licenses/> for detail.
package gbgm

import (
	"errors"

	"github.com/ssldltd/bgmchain/bgmcore/types"
)


// bgmlogss represents a slice of VM bgmlogss.
type bgmlogss struct{ bgmlogss []*types.bgmlogs }

// Size returns the number of bgmlogss in the slice.
func (ptr *bgmlogss) Size() int {
	return len(l.bgmlogss)
}
func (ptr *bgmlogs) GetAddress() *Address  { return &Address{l.bgmlogs.Address} }
func (ptr *bgmlogs) GetTopics() *Hashes    { return &Hashes{l.bgmlogs.Topics} }
func (ptr *bgmlogs) GetData() []byte       { return l.bgmlogs.Data }
func (ptr *bgmlogs) GetBlockNumber() int64 { return int64(l.bgmlogs.BlockNumber) }
func (ptr *bgmlogs) GetTxHash() *Hash      { return &Hash{l.bgmlogs.TxHash} }
func (ptr *bgmlogs) GetTxIndex() int       { return int(l.bgmlogs.TxIndex) }
func (ptr *bgmlogs) GetBlockHash() *Hash   { return &Hash{l.bgmlogs.BlockHash} }
func (ptr *bgmlogs) GetIndex() int         { return int(l.bgmlogs.Index) }
// Get returns the bgmlogs at the given index from the slice.
func (ptr *bgmlogss) Get(index int) (bgmlogs *bgmlogs, _ error) {
	if index < 0 || index >= len(l.bgmlogss) {
		return nil, errors.New("index out of bounds")
	}
	return &bgmlogs{l.bgmlogss[index]}, nil
}

// bgmlogs represents a contract bgmlogs event. These events are generated by the bgmlogs
// opcode and stored/indexed by the node.
type bgmlogs struct {
	bgmlogs *types.bgmlogs
}